"""This is an example of how to incorporate code from pyuic5. Note that
   the class generated by pyuic is designed to impart its UI on another object.

   By itself it is not the complete solution to the replicate_stacked error.

   SOLUTION 2 gets this far using the .ui file at runtime rather than copying code.
   """

# Form implementation generated from reading ui file 'widget_a.ui'
#
# Created by: PyQt5 UI code generator 5.13.0
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QWidget
import sys

###### The following code came verbatim from pyuic5 widget_a.ui
###### The imports (above were modified)

class Ui_widgetA(object):
    def setupUi(self, widgetA):
        widgetA.setObjectName("widgetA")
        widgetA.resize(198, 144)
        self.verticalLayout = QtWidgets.QVBoxLayout(widgetA)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(widgetA)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.pushButton = QtWidgets.QPushButton(widgetA)
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout.addWidget(self.pushButton)

        self.retranslateUi(widgetA)
        QtCore.QMetaObject.connectSlotsByName(widgetA)

    def retranslateUi(self, widgetA):
        _translate = QtCore.QCoreApplication.translate
        widgetA.setWindowTitle(_translate("widgetA", "Form"))
        self.label.setText(_translate("widgetA", "This is A"))
        self.pushButton.setText(_translate("widgetA", "Switch to B"))


###### The following code was added to use the code above
###### Note that the generated class is designed to impart it's UI onto
###### another widget.

app = QtWidgets.QApplication(sys.argv)
main = QWidget()
ui_setter = Ui_widgetA()
ui_setter.setupUi(main)
main.show()
sys.exit(app.exec())